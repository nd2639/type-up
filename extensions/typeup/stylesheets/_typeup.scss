@import "modular-scale";
@import "typeup/settings";
@import "typeup/functions";

/*------------------------------

THE MIXIN

--------------------------------*/

@mixin typeup-body($fontSize, $lineLength, $xHeight) {
	$typeup-lineHeight: typeup-calcLineHeight($fontSize, $lineLength, $xHeight);
	line-height: $typeup-lineHeight;
	font-size: $fontSize;
	@include typeup($fontSize, $lineLength, $xHeight);
}

@mixin typeup-container($fontSize, $lineLength, $xHeight) {
	$typeup-lineHeight: typeup-calcLineHeight($fontSize, $lineLength, $xHeight);
	width: $lineLength;
	line-height: $typeup-lineHeight;
	font-size:$fontSize;
	margin: 0 auto;
	@include typeup($fontSize, $lineLength, $xHeight);
}

@mixin typeup($fontSize: $fontSize, $lineLength: $lineLength, $xHeight: $xHeight) {

	$typeup-lineHeight: typeup-calcLineHeight($fontSize, $lineLength, $xHeight);
	$base-size: $fontSize;

	// Loop through heading tags

	@for $i from 1 to 6 {
		h#{$i} {

			// Modular numbers run from 4 at h1 to 1 at h4, and 0 for h5 and h6
			$modularNumber: 5 - $i;
			@if $modularNumber == -1 {
				$modularNumber: 0;
			}
			font-size: ms(#{$modularNumber});
			@include heading-spacer(ms(#{$modularNumber}),
									$before: typeup-heading-lines-before(h#{$i}),
									$after: typeup-heading-lines-after(h#{$i}),
									$baselineShift: typeup-heading-baseline-shift(h#{$i}));
		}
	}

	p, ul, ol, pre {
		@include basicElementSpacer();
	}

	ul, ol {
		padding-left:0;
	}

	pre {
		padding:$typeup-lineHeight;

		code {
			line-height: $typeup-lineHeight;
		}
	}

	code {
		// inline code elements mess up the line-height
		line-height:0;
	}

	.intro {
		font-size:1.1em;
		@include heading-spacer(1.1em, 0, 1, 0);
	}

	blockquote {
		padding: $typeup-lineHeight;
		margin-top: $typeup-lineHeight;
		margin-bottom:$typeup-lineHeight;

		p:last-child {
			margin-bottom:0;
		}
	}

}

@mixin heading-spacer($size-in-ems,
		$before: $heading-lines-before,
		$after: $heading-lines-after,
		$baselineShift: $headingBaselineShift) {

	$adjust: 0em;

	// If heading lineheight is not a full baseline height, adjust
	@if (typeup-headingLines($size-in-ems)/1em) % 1 == 0.5 {
		$adjust: (($typeup-lineHeight/ $size-in-ems) / 2) * 1em;
	}

	margin-top:$before * ($typeup-lineHeight / $size-in-ems) * 1em + $adjust;
	margin-bottom: $after * ($typeup-lineHeight / $size-in-ems) * 1em;
	position:relative;
	line-height: ($typeup-lineHeight / $size-in-ems) * typeup-headingLines($size-in-ems);
	top: 0em - $baselineShift; 
}

@mixin basicElementSpacer() {
	margin-top:0;
	margin-bottom:$typeup-lineHeight;
}

