@function strip-units($number) {
  @return $number / ($number * 0 + 1);
}

// Check how many line-heights needed for font size. Can return half a baseline height.
@function typeup-headingLines(
	$font-size: $fontSize,
	$lineHeight: $typeup-lineHeight
) {

	$lines: ceil(2 * $font-size / $lineHeight) / 2;
	@return $lines;
}

@function typeup-convertToEms($variable, $base) {
	@if unit($variable) == "px" {
		$variable: ($variable/$base) * 1em;
	}

	@return $variable;
}

@function typeup-calcLineHeight(
	$fontSize: $fontSize,
	$lineLength: $lineLength,
	$xHeight: $xHeight,
	$calcPower: $calcExponent
) {

	// Assuming we are using 16px as base size.
	$baseFontSize: 16px;

	@if unit($fontSize) == "px" {
		$fontSize: ($fontSize / $baseFontSize) * 1em; 
	}

	/*
	* Making the variables unitless.
	*
	*/

	$fontSizeUnitless: strip-units($fontSize);
	$lineLengthUnitless: strip-units($lineLength);

	// Calculate xRatio
	$xRatio: $xHeight * $fontSizeUnitless;

	// Calculate the proper line height.
	$lineHeightUnitless: pow(($lineLengthUnitless * 0.036), $calcExponent) * $xRatio + 0.6;

	/*
	* Moving on to pixel snapping. We don't want a line-height of 24.334571px,
	* we want it nicely at 24px.
	*/

	// Rounding the line height to nearest pixel
	$lineHeightInPx: round($lineHeightUnitless * $fontSizeUnitless * 16px);

	// Assign the final variable with the unit stored in the beginning
	$snappedLineHeight: ($lineHeightInPx / ($fontSizeUnitless * 16px)) * 1em;

	@return $snappedLineHeight;
}

@function typeup-headingLinesBefore($tag) {
	@if $tag == h1 {
		@return $h1LinesBefore;
	}
	@if $tag == h2 {
		@return $h2LinesBefore;
	}
	@if $tag == h3 {
		@return $h3LinesBefore;
	}
	@if $tag == h4 {
		@return $h4LinesBefore;
	}
	@if $tag == h5 {
		@return $h5LinesBefore;
	}
	@if $tag == h6 {
		@return $h6LinesBefore;
	}
}

@function typeup-headingLinesAfter($tag) {
	@if $tag == h1 {
		@return $h1LinesAfter;
	}
	@if $tag == h2 {
		@return $h2LinesAfter;
	}
	@if $tag == h3 {
		@return $h3LinesAfter;
	}
	@if $tag == h4 {
		@return $h4LinesAfter;
	}
	@if $tag == h5 {
		@return $h5LinesAfter;
	}
	@if $tag == h6 {
		@return $h6LinesAfter;	}
}

@function typeup-headingBaselineShift($tag) {
	@if $tag == h1 {
		@return $h1BaselineShift;
	}
	@if $tag == h2 {
		@return $h2BaselineShift;
	}
	@if $tag == h3 {
		@return $h3BaselineShift;
	}
	@if $tag == h4 {
		@return $h4BaselineShift;
	}
	@if $tag == h5 {
		@return $h5BaselineShift;
	}
	@if $tag == h6 {
		@return $h6BaselineShift;	}
}
